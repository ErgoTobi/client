{"version":3,"sources":["constants/actionTypes.js","reducers/posts.js","reducers/index.js","components/Posts/styles.js","api/index.js","actions/posts.js","components/Posts/Post/ToggleButtons.js","components/Form/Form.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/Posts.js","App.js","images/logo.jpg","Header.js","Footer.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","posts","action","type","filter","post","_id","payload","map","startDate","Date","endDate","combineReducers","makeStyles","theme","root","margin","spacing","paper","padding","width","form","display","flexWrap","justifyContent","fileInput","buttonSubmit","marginBottom","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","dispatch","a","api","console","log","ToggleButtons","toggleLayout","setToggleLayout","ToggleButtonGroup","value","exclusive","onChange","event","newAlignment","aria-label","ToggleButton","disabled","Form","currentId","setCurrentId","defaultData","headline","tagline","description","image","useState","postData","setPostData","selectedFiles","imageUploadData","setImageUploadData","useSelector","state","find","classes","useStyles","useDispatch","useEffect","imgExtension","clear","Paper","className","autoComplete","noValidate","onSubmit","e","preventDefault","data","newPost","createPost","Typography","variant","Box","fontStyle","TextField","name","label","fullWidth","target","required","utils","DateFnsUtils","Grid","container","justify","format","KeyboardButtonProps","InputLabelProps","shrink","withIcon","buttonText","maxFileSize","singleImage","withPreview","length","files","Promise","resolve","setAsyncFileState","then","file","Resizer","imageFileResizer","uri","resizeFileToBase64","result","Button","color","size","onClick","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","flexDirection","borderRadius","position","overlay","top","left","overlay2","right","layout2delete","bottom","grid","details","title","cardActions","textVertical","Post","date","month","getUTCMonth","getFullYear","formatDate","iconStyle","background","icon","Layout1","adaptFontColorToImageExistence","Card","CardMedia","style","fontSize","gutterBottom","CardContent","component","CardActions","moment","createdAt","fromNow","Layout2","src","alt","Posts","utc","toDate","sort","b","xs","sm","LinearProgress","App","get","transformResponse","resp","JSON","parse","Error","stringify","response","Grow","in","align","alignItems","item","Header","HeaderContainer","Navbar","bg","maxwidth","expand","Brand","href","logo","Toggle","Collapse","Nav","Link","NavDropdown","Item","Divider","inline","FormControl","placeholder","styled","header","Footer","FooterContainer","footer","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54af1226.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';","import {CREATE, FETCH_ALL, UPDATE, DELETE} from \"../constants/actionTypes\";\r\nimport moment from \"moment\";\r\n\r\nconst posts = (posts = [], action) => {\r\n  switch(action.type) {\r\n      case DELETE:\r\n          return posts.filter((post) => post._id !== action.payload);\r\n      case UPDATE:\r\n          return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n      case FETCH_ALL:\r\n          return action.payload.map(post => ({ ...post, startDate: new Date(post.startDate), endDate: post.endDate !== null ? new Date(post.endDate) : post.endDate  }));\r\n      case CREATE:\r\n          return [ ...posts, action.payload ];\r\n      default:\r\n          return posts;\r\n  }\r\n};\r\n\r\nexport default posts;","import { combineReducers } from 'redux';\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({\r\n   posts: posts, // oder just posts because key and value are the same\r\n});","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        width: \"75%\",\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    fileInput: {\r\n        width: '97%',\r\n        margin: '10px 0',\r\n    },\r\n    buttonSubmit: {\r\n        marginBottom: 10,\r\n    },\r\n}));","import axios from 'axios';\r\n\r\n// const url = 'http://localhost:5000/posts';\r\nconst url = 'https://mern-starter-memoires.herokuapp.com/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url, {\r\n    transformResponse: [function (data) {\r\n        let resp;\r\n        try {\r\n            resp = JSON.parse(data);\r\n        } catch (e) {\r\n            throw Error(`[requestClient] Error parsing response JSON data - ${JSON.stringify(e)}`)\r\n        }\r\n        return resp;\r\n    }]\r\n}).then((response) => {\r\n        return response;\r\n    }\r\n);\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\n\r\n\r\n/*\r\n(async () => {\r\n  axios.interceptors.request.use(\r\n    function (req) {\r\n      req.time = { startTime: new Date() };\r\n      return req;\r\n    },\r\n    (err) => {\r\n      return Promise.reject(err);\r\n    }\r\n  );\r\n\r\n  axios.interceptors.response.use(\r\n    function (res) {\r\n      res.config.time.endTime = new Date();\r\n      res.duration =\r\n        res.config.time.endTime - res.config.time.startTime;\r\n      return res;\r\n    },\r\n    (err) => {\r\n      return Promise.reject(err);\r\n    }\r\n  );\r\n\r\n  axios\r\n    .get(\"http://localhost:3000\")\r\n    .then((res) => {\r\n      console.log(res.duration)\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n})();\r\n*/","import {CREATE, FETCH_ALL, UPDATE, DELETE} from \"../constants/actionTypes\";\r\nimport * as api from '../api';\r\n\r\n// Action Creators\r\nexport const getPosts = () => async (dispatch) => { // Redux thunk with two arrow functions\r\n    try {\r\n        const {data} = await api.fetchPosts();\r\n        console.log(data);\r\n        dispatch({type: FETCH_ALL, payload: data})\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.createPost(post);\r\n        console.log(data);\r\n        dispatch({type: CREATE, payload: data});\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.updatePost(id, post); // const response as destructuring the response to immediately get the data: const { data }\r\n        console.log(data);\r\n        dispatch({type: UPDATE, payload: data})\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch({type: DELETE, payload: id});\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}","import {ToggleButton, ToggleButtonGroup} from \"@material-ui/lab\";\r\nimport ViewAgenda from \"@material-ui/icons/ViewAgenda\";\r\nimport ViewWeek from \"@material-ui/icons/ViewWeek\";\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nimport React from \"react\";\r\n\r\nconst ToggleButtons = ({ toggleLayout, setToggleLayout }) => {\r\n\r\n    const handleToggleLayout = (event, newAlignment) => {\r\n        setToggleLayout(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <ToggleButtonGroup\r\n            value={toggleLayout}\r\n            exclusive\r\n            onChange={handleToggleLayout}\r\n            aria-label=\"text alignment\">\r\n            <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n                <ViewAgenda />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n                <ViewWeek />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n                <Dashboard />\r\n            </ToggleButton>\r\n        </ToggleButtonGroup>\r\n    );\r\n}\r\n\r\nexport default ToggleButtons;","import React, {useState, useEffect} from \"react\";\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport ImageUploader from 'react-images-upload';\r\nimport useStyles from \"../Posts/styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createPost, updatePost} from \"../../actions/posts\";\r\nimport {Box, Button, Paper, TextField, Typography, Grid} from \"@material-ui/core\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport ToggleButtons from \"../Posts/Post/ToggleButtons\";\r\n\r\nconst Form = ({currentId, setCurrentId, toggleLayout, setToggleLayout}) => {\r\n    const defaultData = {headline: '', tagline: '', description: '', endDate: null, startDate: new Date(), image: ''}\r\n    const [postData, setPostData] = useState(defaultData);\r\n    const [imageUploadData, setImageUploadData] = useState({selectedFiles: []});\r\n    const post = useSelector((state) => currentId ? state.posts.find((post) => post._id === currentId) : null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (post) setPostData(post);\r\n    }, [post]);\r\n\r\n    const imgExtension = ['.jpg', '.gif', '.png'];\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Prevent browser from refreshing\r\n\r\n        if (currentId) {\r\n            dispatch(updatePost(currentId, postData));\r\n        } else {\r\n            dispatch(createPost(postData));\r\n        }\r\n        clear();\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData(defaultData);\r\n        setImageUploadData({selectedFiles: []});\r\n    }\r\n\r\n    const resizeFileToBase64 = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 1000, 1000, 'JPEG', 100, 0,\r\n            uri => {\r\n                resolve(uri);\r\n            }, 'base64');\r\n    });\r\n\r\n    const setAsyncFileState = (files) => new Promise(resolve => {\r\n        setImageUploadData({selectedFiles: files});\r\n        resolve(files[0]);\r\n    });\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h5\"><Box fontStyle=\"oblique\">{currentId ? 'Edit' : 'Create'} your\r\n                    Memoires</Box></Typography>\r\n                <TextField name=\"headline\" variant=\"outlined\" label=\"Headline\" fullWidth value={postData.headline}\r\n                           onChange={(e) => setPostData({...postData, headline: e.target.value})} required/>\r\n                <TextField name=\"tagline\" variant=\"outlined\" label=\"Tagline\" fullWidth value={postData.tagline}\r\n                           onChange={(e) => setPostData({...postData, tagline: e.target.value})}/>\r\n                <TextField name=\"description\" variant=\"outlined\" label=\"Description\" fullWidth\r\n                           value={postData.description}\r\n                           onChange={(e) => setPostData({...postData, description: e.target.value})}/>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                        <KeyboardDatePicker name=\"startDate\" margin=\"normal\" label=\"Start Date\" format=\"dd/MM/yyyy\"\r\n                                            value={postData.startDate}\r\n                                            onChange={(e) => {\r\n                                                setPostData({...postData, startDate: e})\r\n                                            }}\r\n                                            KeyboardButtonProps={{'aria-label': 'change date',}}\r\n                                            InputLabelProps={{shrink: true,}} required/>\r\n                        <KeyboardDatePicker name=\"endDate\" margin=\"normal\" label=\"End Date\" format=\"dd/MM/yyyy\"\r\n                                            value={postData.endDate}\r\n                                            onChange={(e) => {\r\n                                                setPostData({...postData, endDate: e})\r\n                                            }}\r\n                                            KeyboardButtonProps={{'aria-label': 'change date',}}\r\n                                            InputLabelProps={{shrink: true,}}/>\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n\r\n                {/*\r\n                <TextField name=\"tag\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tag}\r\n                           onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}/>\r\n                 */}\r\n                <ImageUploader name=\"image\" id=\"imageUploader\" withIcon={true} buttonText=\"Choose new Image\"\r\n                               imgExtension={imgExtension} maxFileSize={10485760}\r\n                               label={`Max file size: 10mb; Accepted: ${imgExtension}`} singleImage={true}\r\n                               withPreview={imageUploadData.selectedFiles.length ? true : false}\r\n                               onChange={(files) => setAsyncFileState(files).then((file) => resizeFileToBase64(file).then(result => {\r\n                                   setPostData({...postData, image: result})\r\n                               }))}/>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\"\r\n                        fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n            <br/>\r\n            <ToggleButtons toggleLayout={toggleLayout} setToggleLayout={setToggleLayout}/>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nexport class Content extends React.Component {\r\n    state = {\r\n        headline: '',\r\n        tagline: '',\r\n        description: '',\r\n        endDate: '',\r\n        startDate: new Date(),\r\n        image: null,\r\n        lastInput: ''\r\n    };\r\n    // memoryInput = React.createRef(); // 1) Functions as a ID\r\n    handleSubmit = (event) => {\r\n        event.preventDefault(); // Without this line, page is going to refresh\r\n\r\n        console.log(\r\n            this.memoryInput.current.value // 1) read from DOM element\r\n        )\r\n\r\n        // 2) Controlled components\r\n        // console.log(this.state.memory);\r\n\r\n        this.props.onSubmit({\r\n            headline: this.state.headline,\r\n            tagline: this.state.tagline,\r\n            description: this.state.description,\r\n            endDate: this.state.endDate,\r\n            startDate: this.state.startDate,\r\n            image: this.state.image\r\n        });\r\n        this.setState({\r\n            lastInput: this.state.headline,\r\n            headline: '',\r\n            tagline: '',\r\n            description: '',\r\n            endDate: '',\r\n            startDate: new Date(),\r\n            image: null\r\n        }); // Reset Input\r\n    };\r\n\r\n    callbackStartDate = (date) => this.setState({startDate: date});\r\n    callbackEndDate = (date) => this.setState({endDate: date});\r\n    onChooseImage = (event) => {\r\n        console.log(event[0])\r\n        this.setState({image: URL.createObjectURL(event[0])});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                {// 1) <input type=\"description\" placeholder=\"Enter new memory\" ref={this.memoryInput} required/>}\r\n                <span>Text Input: </span>\r\n                <input type=\"text\" value={this.state.headline}\r\n                       onChange={event => this.setState({headline: event.target.value})}\r\n                       placeholder=\"Insert new Headline\" required/>\r\n                <input type=\"text\" value={this.state.tagline}\r\n                       onChange={event => this.setState({tagline: event.target.value})}\r\n                       placeholder=\"Insert new Tagline\" />\r\n                <input type=\"text\" value={this.state.description}\r\n                       onChange={event => this.setState({description: event.target.value})}\r\n                       placeholder=\"Insert new Description\" />\r\n                <p>Last Headline: {this.state.lastInput}</p>\r\n                <div>Date Input: </div>\r\n                <CalendarPicker parentCallbackStartDate={this.callbackStartDate}\r\n                                parentCallbackEndDate={this.callbackEndDate} startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}/>\r\n                <ImagePicker onChoose={this.onChooseImage}/>\r\n                <button>Add Memory</button>\r\n\r\n            </form>\r\n        );\r\n    }\r\n\r\n    // list.map((ele) => <p>{ele}</p>)\r\n    // list.slice(-1)[0]\r\n}\r\n\r\n*/\r\n\r\n\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        backgroundBlendMode: 'darken',\r\n    },\r\n    border: {\r\n        border: 'solid',\r\n    },\r\n    fullHeightCard: {\r\n        height: '100%',\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        borderRadius: '15px',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        left: '20px',\r\n        color: 'white',\r\n    },\r\n    overlay2: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        right: '20px',\r\n        color: 'white',\r\n    },\r\n    layout2delete: {\r\n        position: 'absolute',\r\n        bottom: '20px',\r\n        right: '20px',\r\n        color: 'black',\r\n    },\r\n    grid: {\r\n        display: 'flex',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        margin: '20px',\r\n    },\r\n    title: {\r\n        padding: '0 16px',\r\n    },\r\n    cardActions: {\r\n        padding: '0 16px 8px 16px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    textVertical: {\r\n        position: \"relative\",\r\n        top: \"50%\",\r\n        // transform: \"translateY(-50%)\",\r\n    },\r\n});","import React from \"react\";\r\nimport {VerticalTimelineElement} from \"react-vertical-timeline-component\";\r\nimport {FaHeart} from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport useStyles from \"./styles.js\";\r\nimport {Box, Button, Card, CardActions, CardContent, CardMedia, Typography} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deletePost} from \"../../../actions/posts.js\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst Post = ({post, setCurrentId, toggleLayout}) => {\r\n    const formatDate = () => {\r\n        try {\r\n            return post.endDate || post.endDate !== null\r\n                ? month[post.startDate.getUTCMonth()] + \" \" + post.startDate.getFullYear() + \" - \" + month[post.endDate.getUTCMonth()] + \" \" + post.endDate.getFullYear()\r\n                : month[post.startDate.getUTCMonth()] + \" \" + post.startDate.getFullYear();\r\n        } catch (e) {\r\n            console.log(e);\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <VerticalTimelineElement\r\n            className=\"vertical-timeline-element--work\"\r\n            date={formatDate()}\r\n            iconStyle={{background: 'rgb(33, 150, 243)', color: '#fff'}}\r\n            icon={<FaHeart/>}>\r\n            {toggleLayout === 'left' ? <Layout1 post={post} setCurrentId={setCurrentId}/> :\r\n                <Layout2 post={post} setCurrentId={setCurrentId}/>}\r\n\r\n        </VerticalTimelineElement>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\nconst Layout1 = ({post, setCurrentId}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const adaptFontColorToImageExistence = () => {\r\n        return post.image ? \"white\" : \"black\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.card}>\r\n                {post.image ? <CardMedia className={classes.media} image={post.image} title={post.headline}/> : <span/>}\r\n                <div className={classes.overlay}>\r\n                    <Typography variant=\"h6\"><Box\r\n                        color={adaptFontColorToImageExistence()}>{post.headline}</Box></Typography>\r\n                </div>\r\n                <br/>\r\n                <div className={classes.overlay2}>\r\n                    <Button style={{color: adaptFontColorToImageExistence()}} size=\"small\"\r\n                            onClick={() => setCurrentId(post._id)}>\r\n                        <MoreHorizIcon fontSize=\"default\"/>\r\n                    </Button>\r\n                </div>\r\n                <div className={classes.details}>\r\n                    {/*<Typography variant=\"body2\" color=\"textSecondary\">{post.tag.map((tag) => `#${tag}`)}</Typography>*/}\r\n                </div>\r\n                <Typography className={classes.title} variant=\"h6\" gutterBottom>{post.tagline}</Typography>\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.description}</Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.cardActions}>\r\n                    <Typography className={classes.textVertical}\r\n                                variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\r\n                        <DeleteIcon fontSize=\"small\"/>\r\n                        Delete {/* Space &nbsp; */}\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Layout2 = ({post, setCurrentId}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            <h3 className=\"vertical-timeline-element-title\">{post.headline}</h3>\r\n            <div className={classes.overlay2}>\r\n                <Button style={{color: \"black\"}} size=\"small\"\r\n                        onClick={() => setCurrentId(post._id)}>\r\n                    <MoreHorizIcon fontSize=\"default\"/>\r\n                </Button>\r\n            </div>\r\n            <h4 className=\"vertical-timeline-element-subtitle\">{post.tagline}</h4>\r\n            <br/>\r\n            {post.image ? <img src={`${post.image}`} alt=\"memories\" width=\"100%\"/> : <span/>}\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.description}</Typography>\r\n            <br/>\r\n            <div className={classes.layout2delete}>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize=\"small\"/>\r\n                    Delete {/* Space &nbsp; */}\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nlet month = [];\r\nmonth[0] = \"Jan\";\r\nmonth[1] = \"Feb\";\r\nmonth[2] = \"Mar\";\r\nmonth[3] = \"Apr\";\r\nmonth[4] = \"May\";\r\nmonth[5] = \"Jun\";\r\nmonth[6] = \"Jul\";\r\nmonth[7] = \"Aug\";\r\nmonth[8] = \"Sep\";\r\nmonth[9] = \"Oct\";\r\nmonth[10] = \"Nov\";\r\nmonth[11] = \"Dec\";","import React from 'react';\r\nimport {VerticalTimeline, VerticalTimelineElement} from \"react-vertical-timeline-component\";\r\nimport {FaHeart} from \"react-icons/fa\";\r\nimport Post from \"./Post/Post.js\"\r\nimport {useSelector} from \"react-redux\";\r\nimport useStyles from \"./styles.js\"\r\nimport {LinearProgress} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nconst Posts = ({setCurrentId , toggleLayout}) => {\r\n    const classes = useStyles();\r\n\r\n    const posts = useSelector((state) => state.posts\r\n        .map(post => ({\r\n            ...post,\r\n            startDate: moment(post.startDate).utc().toDate(),\r\n            endDate: post.endDate !== null ? moment(post.endDate).utc().toDate() : post.endDate\r\n        })) // Same mapping as in reducers to ensure new Dates with UTC encoding else UI breaks\r\n        .sort((a, b) => b.startDate - a.startDate));\r\n\r\n    return (\r\n        !posts.length ? <LinearProgress/> : (\r\n            <VerticalTimeline>\r\n                {posts.map((post) => (\r\n                    <Post key={post._id} xs={12} sm={6} post={post} setCurrentId={setCurrentId} toggleLayout={toggleLayout}/>\r\n                ))}\r\n                <VerticalTimelineElement\r\n                    iconStyle={{background: 'rgb(16, 204, 82)', color: '#fff'}}\r\n                    icon={<FaHeart/>}\r\n                />\r\n            </VerticalTimeline>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n\r\n\r\n/*\r\nfunction Timeline(props) {\r\n    // without key property for dynamic children elements, the location is internally taken as id which might cause problems when ordering -> to avoid assign a unique key profile.id e.g.\r\n    return (\r\n        <VerticalTimeline>\r\n            {props.memories.map(memory => <TiliElement key={Math.random()} {...memory}/>)}\r\n            <VerticalTimelineElement\r\n                className=\"vertical-timeline-element--education\"\r\n                contentArrowStyle={{borderRight: '7px solid  rgb(33, 150, 243)'}}\r\n                date=\"Apr 2013\"\r\n                iconStyle={{background: 'rgb(233, 30, 99)', color: '#fff'}}\r\n                icon={<FaHeart/>}\r\n            >\r\n                <h3 className=\"vertical-timeline-element-title\">Content Marketing for Web, Mobile and Social\r\n                    Media</h3>\r\n                <h4 className=\"vertical-timeline-element-subtitle\">Online Course</h4>\r\n                <p>\r\n                    Strategy, Social Media\r\n                </p>\r\n            </VerticalTimelineElement>\r\n            <VerticalTimelineElement\r\n                iconStyle={{background: 'rgb(16, 204, 82)', color: '#fff'}}\r\n                icon={<FaHeart/>}\r\n            />\r\n        </VerticalTimeline>\r\n    );\r\n}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            memories: testData.sort((a,b) => b.startDate - a.startDate) // Sorting initially\r\n        };\r\n    }\r\n\r\n    // Works the same with babel, not yet part of the official syntax\r\n    // state = {\r\n    //     memories: testData,\r\n    // };\r\n\r\n    addNewMemory = (memoryData) => {\r\n        console.log(memoryData);\r\n        // To update state of react component\r\n        this.setState(prevState => ({\r\n            memories: [...prevState.memories, memoryData].sort((a,b) => b.startDate - a.startDate) // equivalent of concat operation -> spread operator syntax\r\n        }));\r\n    };\r\n\r\nconst testData = [\r\n    {\r\n        headline: \"Vietman\",\r\n        tagline: \"Trying to get a China Visa\",\r\n        description: \"There was only little time getting my access rights for the Kung Fu school in China. A layover of a couple of hours stood between me and my holistic travel plan! What a time to be alive! xD \",\r\n        startDate: new Date(\"5/2/2018\"),\r\n        endDate: new Date(\"6/3/2018\"),\r\n        image: ''\r\n    },\r\n    {\r\n        headline: \"Wildschönau\",\r\n        tagline: \"Fyling ever higher\",\r\n        description: \"A chilled summer of enjoying the nature. Some colleagues of mine were introduced to paragliding. This meant the beginning of the 'peachy paragliders'!\",\r\n        startDate: new Date(\"4/2/2019\"),\r\n        endDate: new Date(\"9/3/2019\"),\r\n        image: ''\r\n    },\r\n    {\r\n        headline: \"Taiwan - Taipei\",\r\n        tagline: \"Saying Goodbye\",\r\n        description: \"Unbelievable!? I have waited till the very end to visit the capital of Taiwan - Taipei. Also I drank my beloved Bubble Tea for the last time... \",\r\n        startDate: new Date(\"8/2/2018\"),\r\n        endDate: null,\r\n        image: ''\r\n    },\r\n    {\r\n        headline: \"Taiwan - Alishan\",\r\n        tagline: \"Stand up early to see the sun rising they said... it's gonna be fun they said...\",\r\n        description: \"There are just these times when it feels a little to early in the morning. On our way at 4pm...\",\r\n        startDate: new Date(\"3/2/2018\"),\r\n        endDate: null,\r\n        image: ''\r\n    }\r\n]\r\n*/","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {Grow, Grid} from \"@material-ui/core\";\nimport Form from \"./components/Form/Form.js\";\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from \"./actions/posts.js\";\nimport Posts from './components/Posts/Posts.js'\n\nconst App = () => {\n    const [currentId, setCurrentId] = useState(null);\n    const [toggleLayout, setToggleLayout] = useState('left');\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPosts());\n    }, [currentId, dispatch]);\n\n    return (\n        <div className=\"container\" >\n            <Grow in>\n                <div className=\"container\">\n                    <div align=\"center\">\n                        <Form currentId={currentId} setCurrentId={setCurrentId} toggleLayout={toggleLayout} setToggleLayout={setToggleLayout}/>\n                    </div>\n                    <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n                        <Grid item xs={12} sm={12}>\n                            <br/>\n                            <Posts setCurrentId={setCurrentId} toggleLayout={toggleLayout}/>\n                        </Grid>\n                        {/*<Grid item xs={12} sm={2}></Grid>*/}\n                    </Grid>\n                </div>\n            </Grow>\n        </div>\n    )\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.52fbeb7f.jpg\";","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport styled from 'styled-components'\r\n\r\nimport logo from './images/logo.jpg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderContainer className=\"main-header\">\r\n            <div className=\"header-middle\">\r\n                <div className=\"container\">\r\n                    <Navbar bg=\"--mainWhite\" maxwidth=\"lg\" expand=\"lg\">\r\n                        <Navbar.Brand href=\"#home\">\r\n                            <img\r\n                                alt=\"logo\"\r\n                                src={logo}\r\n                                width=\"80\"\r\n                                height=\"40\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />{\" \"}\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle/>\r\n                        <Navbar.Collapse>\r\n                            <Nav className=\"mr-auto\">\r\n                                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                                <Nav.Link href=\"#foo\">About us</Nav.Link>\r\n                                <NavDropdown title=\"What else to know?\">\r\n                                    <NavDropdown.Item href=\"#action/1\">action 1</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"#action/2\">action 2</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"#action/3\">action 3</NavDropdown.Item>\r\n                                    <NavDropdown.Divider/>\r\n                                    <NavDropdown.Item href=\"#action/4\">action 4</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            </Nav>\r\n                            <Form inline>\r\n                                <FormControl type=\"description\" placeholder=\"search\" className=\"mr-sm-2\"/><Button\r\n                                variant=\"outline-primary\">search</Button>\r\n                            </Form>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </div>\r\n            </div>\r\n        </HeaderContainer>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst HeaderContainer = styled.header`\r\n  .header-middle {\r\n    background: var(--mainWhite);\r\n    padding-top: 1rem;\r\n    padding-bottom: 1rem;\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterContainer className=\"main-footer\">\r\n            <div className=\"footer-middle\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {/* Column 1*/}\r\n                        <div className=\"col-md-3 col-sm-6\">\r\n                            <h4>Contact us</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li>BRD GmbH</li>\r\n                                <li>Heavenhausen</li>\r\n                                <li>666 Hell</li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* Column 2*/}\r\n                        <div className=\"col-md-3 col-sm-6\">\r\n                            <h4>Lorem ipsum</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"https://www.xing.com/\"> blarum</a></li>\r\n                                <li>blarum</li>\r\n                                <li>blarum</li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* Column 3*/}\r\n                        <div className=\"col-md-3 col-sm-6\">\r\n                            <h4>Lorem ipsum</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li>blarum</li>\r\n                                <li>blarum</li>\r\n                                <li>blarum</li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* Column 4*/}\r\n                        <div className=\"col-md-3 col-sm-6\">\r\n                            <h4>Lorem ipsum</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li>blarum</li>\r\n                                <li>blarum</li>\r\n                                <li>blarum</li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* Footer Bottom */}\r\n                        <div className=\"footer-bottom\">\r\n                            <p className=\"text-xs-center\">\r\n                                &copy;{new Date().getFullYear()} Memoires - All Rights Reserved\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </FooterContainer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n\r\n\r\n\r\n// 1rem = 16 pixels\r\nconst FooterContainer = styled.footer`\r\n    .footer-middle {\r\n        background: var(--mainDark);\r\n        padding-top: 3rem;\r\n        color: var(--mainWhite);\r\n    }\r\n    .footer-bottom {\r\n        padding-top: 3rem;\r\n    }\r\n    \r\n    ul li a {\r\n        color: var(--mainGrey);\r\n    }\r\n    \r\n    ul li a:hover {\r\n        color: var(--mainLightGrey);\r\n    }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport \"./index.css\"\n\nimport reducers from './reducers';\n\nimport App from './App';\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <Header/>\n        <App/>\n        <br/>\n        <Footer/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}